I"ﬂ(function() {
  var Price, betwen_date, change_price, number_to_currency, number_with_delimiter, parse_date, procent, ready;

  Price = {
    price_for_day: function(type_rooms) {
      switch (type_rooms) {
        case "1":
          return 2200.0;
        case "2":
          return 1200;
        case "3":
          return 3200;
        case "4":
          return 2200;
        case "5":
          return 3200;
        case "6":
          return 8000;
      }
    },
    price_for_time: function(count, type_rooms) {
      var number;
      number = this.price_for_day(type_rooms) * count;
      if (count > 5) {
        number = procent(number, 20);
      } else {
        if (count > 2) {
          number = procent(number, 10);
        }
      }
      return number;
    },
    price_for_time_show: function(count, type_rooms) {
      var number;
      number = this.price_for_time(count, type_rooms);
      return number_to_currency(number);
    }
  };

  procent = function(number, proc) {
    var one;
    one = number / 100;
    return number - one * proc;
  };

  parse_date = function(date) {
    var dateParts;
    dateParts = date.split("/");
    return date = new Date(dateParts[0], dateParts[1] - 1, dateParts[2]);
  };

  betwen_date = function(date_from, date_to) {
    var DAY, days_passed;
    DAY = 1000 * 60 * 60 * 24;
    date_to = parse_date(date_to);
    date_from = parse_date(date_from);
    return days_passed = Math.round((date_to.getTime() - date_from.getTime()) / DAY);
  };

  number_to_currency = function(number) {
    var delimiter, e, error, parts, precision, separator, unit;
    try {
      precision = 2;
      unit = 'Kƒç';
      separator = precision > 0 ? '.' : '';
      delimiter = ' ';
      parts = parseFloat(number).toFixed(precision).split('.');
      return number_with_delimiter(parts[0], delimiter) + separator + parts[1].toString() + unit;
    } catch (error) {
      e = error;
      return number;
    }
  };

  number_with_delimiter = function(number) {
    var delimiter, e, error, parts, separator;
    try {
      delimiter = ' ';
      separator = '.';
      parts = number.toString().split('.');
      parts[0] = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + delimiter);
      return parts.join(separator);
    } catch (error) {
      e = error;
      return number;
    }
  };

  change_price = function() {
    var betwen, from_date, to_date, type_rooms;
    from_date = $('#order_from_date').val();
    to_date = $('#order_to_date').val();
    type_rooms = $('#order_room_id').val();
    betwen = betwen_date(from_date, to_date);
    if (betwen > 0) {
      $('#order_price').val(Price.price_for_time(betwen, type_rooms));
      return $('#price_show').val(Price.price_for_time_show(betwen, type_rooms));
    } else {
      $('#price_show').val("Vyberte jinn√Ω rozsah datum≈Ø");
      return $('#order_price').val("Vyberte jinn√Ω rozsah datum≈Ø");
    }
  };

  ready = function() {
    $('#order_room_id').change(function() {
      return change_price();
    });
    $('#order_from_date').change(function() {
      return change_price();
    });
    return $('#order_to_date').change(function() {
      return change_price();
    });
  };

  $(document).ready(ready);

  $(document).on('page:load', ready);

}).call(this);
:ET